<<<<<<< HEAD
version: "3.7"
networks: 
    - mynetwork
services: 
    anyapp:
        build:
            context: src/${PROJECT_LANG:-python}
        image: ${DOCKER_REPO:-aoesis}/${PROJECT_LANG}-expert:v1.0
        environment: 
            - FOO=bar
            - VAR=var
        init: true
        ports: 
            - 9090:8080
        networks: 
            - mynetwork
    anyapp2:
        build:
            context: src/go
        image: ${DOCKER_REPO:-aoesis}/go-expert:v1.0
        environment: 
            - FOO=bar
            - VAR=var
        init: true
        ports: 
            - 9091:8080
        networks: 
            - mynetwork
    db:
        image: redis:alpine
        restart: on-faiure
        networks: 
            - mynetwork
    nginx:
        image: nginx:alpine
        networks: 
            - mynetwork


    helloworld:
        build:
            context: src/helloworld
        image: ${DOCKER_REPO:-aoesis}/helloworld-expert:v1.0
        environment: 
            - FOO=bar
            - VAR=var
        init: true
        ports: 
            - 9080:8080
    
=======
version: "3.0"

# named volumes

services:
  anyApp:
    build:
      context: src/${PROJECT_LANG:-python}

    image: ${DOCKER_REPO:-mcano}/${PROJECT_LANG:-python}-expert:v1.0
    environment:
      - FOO=bar
      - VAR=var
      - REDIS_HOST=db
    ports:
      - 8080:8080

    logging:
      driver: awslogs
      options:
        awslogs-group: ec2-tutorial
        awslogs-region: us-west-2
        awslogs-stream-prefix: web

# # FQDN == fully qualified domain name
  # db:
  #   image: redis:alpine
  #   restart: on-failure
  #   volumes:
  #     - redis-vol:/data
  #     - shared:/home/shared

>>>>>>> 1cdb4b993c960686ad46ffd5486417a6aa4243fd
